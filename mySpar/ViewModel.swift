//
//  ViewModel.swift
//  mySpar
//
//  Created by –ê–Ω—Ç–æ–Ω –†–∞–∑–≥—É–ª—è–µ–≤ on 20.08.2024.
//

import Foundation

class ViewModel: ObservableObject {
    
    /// –°–≤–æ–π—Å—Ç–≤–æ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –≤ —Å–µ–±–µ –º–∞—Å—Å–∏–≤ –∏–∑ –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    @Published var products: [Product] = []  {
        didSet {
            saveBasket()
        }
    }
    
    /// –°–≤–æ–π—Å—Ç–≤–æ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –≤ —Å–µ–±–µ –º–∞—Å—Å–∏–≤ –∏–∑ –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤ –∫–æ—Ä–∑–∏–Ω—É
    @Published var productsInBasket: [Product] = []
    
    init() {
        // —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤–æ–π –ª–∏–Ω–µ–π–∫–∏:
        products = [
            Product(image: "Nuts", comment: "–£–¥–∞—Ä –ø–æ —Ü–µ–Ω–∞–º", name: "—Å—ã—Ä –õ–∞–º–±–µ—Ä 500/0 230–≥", price: 99.90, oldPrice: 199, measure: "—à—Ç"),
            Product(image: "Cola", name: "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –ù–∞–ø–∏—Ç–æ–∫", price: 99.90, oldPrice: 199, discount: 25, measure: "—à—Ç"),
            Product(image: "Meat2", comment: "–£–¥–∞—Ä –ø–æ —Ü–µ–Ω–∞–º", name: "–°–∞–ª–∞—Ç –û–≤–æ—â–Ω–æ–π —Å –ö—Ä–∞–±–æ–≤—ã–º–∏ –ü–∞–ª–æ—á–∫–∞–º–∏", price: 120.90, oldPrice: 219.5, measure: "—à—Ç"),
            Product(image: "Meat5", name: "–î–æ—Ä–∞–¥–æ –û—Ö–ª–∞–∂–¥–µ–Ω–Ω–∞—è –ù–µ–ø–æ—Ç—Ä–æ—à–µ–Ω–∞—è 300-400–≥", price: 95699.25, oldPrice: 1298.90, measure: "—à—Ç"),
            Product(image: "Meat4", name: "–†–æ–ª–ª –ú–∞–ª–µ–Ω—å–∫–∞—è –Ø–ø–æ–Ω–∏—è 216 –≥", price: 299, oldPrice: 399, measure: "—à—Ç"),
            Product(image: "Cucumber", madeIn: "–§—Ä–∞–Ω—Ü–∏—è üá´üá∑", name: "–û–≥—É—Ä—Ü—ã —Ç–µ–ø–ª–∏—á–Ω—ã–µ c–∞–¥–æ–≤–æ-–æ–≥–æ—Ä–æ–¥–Ω—ã–µ", price: 2600.90, oldPrice: 1999.90, measure: "—à—Ç"),
            Product(image: "Meat7", madeIn: "–¢—É—Ä—Ü–∏—è üáπüá∑", name: "–ú–∞–Ω–≥–æ –ö–µ–æ", price: 1298.90, oldPrice: 399, discount: 15, measure: "—à—Ç"),
            Product(image: "Meat8", name: "–°–∞–ª–∞—Ç –û–≤–æ—â–Ω–æ–π —Å –ö—Ä–∞–±–æ–≤—ã–º–∏ –ü–∞–ª–æ—á–∫–∞–º–∏", price: 99.90, oldPrice: 299, measure: "—à—Ç"),
            Product(image: "Meat1", comment: "–ù–æ–≤–∏–Ω–∫–∞", name: "–ú–∞—Å–ª–æ –°–ª–æ–±–æ–¥–∞ –†–∞—Ñ–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ 1,8–ª", price: 2600.90, oldPrice: 199, measure: "—à—Ç"),
            Product(image: "Cucumber", madeIn: "–ò—Ç–∞–ª–∏—è üáÆüáπ", name: "–ú–∞–∫–∞—Ä–æ–Ω–Ω—ã–µ –ò–∑–¥–µ–ª–∏—è SPAR –°–ø–∞–≥–µ—Ç—Ç–∏", price: 399, measure: "—à—Ç"),
            Product(image: "Nuts", name: "–û–≥—É—Ä—Ü—ã —Ç–µ–ø–ª–∏—á–Ω—ã–µ c–∞–¥–æ–≤–æ- –æ–≥–æ—Ä–æ–¥–Ω—ã–µ", price: 1298.90, oldPrice: 299, measure: "—à—Ç"),
            Product(image: "Tea", name: "–û–≥—É—Ä—Ü—ã —Ç–µ–ø–ª–∏—á–Ω—ã–µ c–∞–¥–æ–≤–æ- –æ–≥–æ—Ä–æ–¥–Ω—ã–µ", price: 2600.90, oldPrice: 199, measure: "—à—Ç")
        ]

        // –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–∑ UserDefaults —Å–≤–æ–π—Å—Ç–≤–∞ products –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—É,  —Ç–æ –µ—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        guard
            let data = UserDefaults.standard.data(forKey: "encodedProducts"),
            let decodedProducts = try? JSONDecoder().decode([Product].self, from: data)
        else { return }
        self.products = decodedProducts
    }

    /// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —Ç–æ–≤–∞—Ä–∞. –°–æ–∑–¥–∞–µ—Ç —Ç–∞–∫–æ–π –∂–µ —Ç–æ–≤–∞—Ä —Å –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ isFavoutite
    func makeFavourite(id: String) {
        if let index = products.firstIndex(where: {$0.id == id}) {
            products[index] = products[index].addOrRemoveFromFavoutites()
        }
    }

    /// –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É.
    func changeQuantity(id: String, newQuantity: Double) {
        if let index = products.firstIndex(where: {$0.id == id}) {
            products[index] = products[index].changeQuantity(newQuantity: newQuantity)
        }
        addToBasket()
    }

    /// –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞. –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥ segmenred picker
    func changeMeasure(id: String, newMeasure: String) {
        if let index = products.firstIndex(where: {$0.id == id}) {
            products[index] = products[index].changeMeasure(newMeasure: newMeasure)
        }
    }

    /// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É, —Ç–æ –µ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –º–∞—Å—Å–∏–≤ productsInBasket. –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç, —á—Ç–æ–±—ã —Ç–æ–≤–∞—Ä –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª—Å—è.
    func addToBasket() {
        var basket: [Product] = []
        for product in products {
            if product.quantity ?? 0 > 0 {
                basket.append(product)
            }
        }
        productsInBasket = basket
    }

    /// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    func totalPrice() -> Double {
        var total: Double = 0
        for product in productsInBasket {
            if product.quantity ?? 0 > 0 {
                total += (product.price * (product.quantity ?? 0))
            }
        }
        return total
    }

    /// –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤–∞ products –≤ UserDefaults
    func saveBasket() {
        let encodedProducts = try? JSONEncoder().encode(products)
        UserDefaults.standard.setValue(encodedProducts, forKey: "encodedProducts")
    }

    /// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã.
    func deleteFromBasket (indexSet: IndexSet) {
        productsInBasket.remove(atOffsets: indexSet)
    }

}
